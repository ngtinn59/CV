package ctu.cit;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class ProjectRepository {

    Connection conn = null;

    public ProjectRepository() {
        String user_name = "postgres";
        String password = "123";
        try {
            Class.forName("org.postgresql.Driver");
            conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/cse", user_name, password);
            System.out.println("Ket noi thanh cong!");
        } catch (Exception e) {
            System.out.println("Kết nối đến cơ sở dữ liệu thất bại: " + e.getMessage());
        }
    }

    public Projects insertProject(Projects project, int profilesId) {
    	  // Your SQL statement now no longer requires the profile object
    	  String sql = "INSERT INTO public.projects(\r\n" + 
    	  		"	id, title, description, profiles_id, start_date, end_date)\r\n" + 
    	  		"	VALUES (?, ?, ?, ?, ?, ?)";
    	  try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
    	    pstmt.setInt(1, project.getId());
    	    pstmt.setString(2, project.getTitle());
    	    pstmt.setString(3, project.getDescription());
    	    pstmt.setInt(4, profilesId);
    	    pstmt.setString(5, project.getStartDate());
    	    pstmt.setString(6, project.getEndDate()); // Use the profilesId parameter directly
    	    // ... execute update and handle results ...
    	  } catch (SQLException e) {
    	    System.out.println("Error while inserting project into the database: " + e.getMessage());
    	  }
		return project;
    	}
    public List<Projects> getAllProjects() {
        List<Projects> projects = new ArrayList<>();

        String sql = "SELECT * FROM public.projects";
        try (PreparedStatement pstmt = conn.prepareStatement(sql);
             ResultSet rs = pstmt.executeQuery()) {
          while (rs.next()) {
            Projects project = new Projects();
            project.setId(rs.getInt("id"));
            project.setTitle(rs.getString("title"));
            project.setDescription(rs.getString("description"));
            project.setProfile((rs.getInt("profiles_id")));
            project.setStartDate(rs.getString("start_date"));
            project.setEndDate(rs.getString("end_date"));

            projects.add(project);
          }
        } catch (SQLException e) {
          System.out.println("Error while retrieving projects from the database: " + e.getMessage());
        }

        return projects;
      }
    
    public static void main(String[] args) {

        ProjectRepository repository = new ProjectRepository();

        // Retrieve all projects
        List<Projects> projects = repository.getAllProjects();

        // Print the retrieved projects
        for (Projects project : projects) {
          System.out.println("Project ID: " + project.getId());
          System.out.println("Title: " + project.getTitle());
          System.out.println("Description: " + project.getDescription());
          System.out.println("Start Date: " + project.getStartDate());
          System.out.println("End Date: " + project.getEndDate());
          System.out.println();
        }
      }
}
