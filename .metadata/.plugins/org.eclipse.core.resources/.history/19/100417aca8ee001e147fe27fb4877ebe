package ctu.cit;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

public class EducationRepository {

    Connection conn = null;

    public EducationRepository() {
        String user_name = "postgres";
        String password = "123";
        try {
            Class.forName("org.postgresql.Driver");
            conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/cse", user_name, password);
            System.out.println("Ket noi thanh cong!");
        } catch (Exception e) {
            System.out.println("Káº¿t ná»‘i Ä‘áº¿n cÆ¡ sá»Ÿ dá»¯ liá»‡u tháº¥t báº¡i: " + e.getMessage());
        }
    }

    public Education insertEducation(Education education, int profilesId) {
        String sql = "INSERT INTO public.educations(\r\n" + 
                "degree, institution, additionaldetail, start_date, end_date, profiles_id)\r\n" + 
                "VALUES (?, ?, ?, ?, ?, ?)" +
                "RETURNING id"; // Trả về chỉ ID thay vì tất cả các trường

        try (PreparedStatement pstmt = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS)) {
            pstmt.setString(1, education.getDegree());
            pstmt.setString(2, education.getInstitution());
            pstmt.setString(3, education.getAdditionalDetail());
            pstmt.setString(4, education.getStartDate()); // Chuyển đổi từ java.util.Date sang java.sql.Date
            pstmt.setString(5,education.getEndDate()); // Chuyển 
            pstmt.setInt(6, profilesId);

            int affectedRows = pstmt.executeUpdate();
            if (affectedRows == 0) {
                throw new SQLException("Insertion failed, no rows affected.");
            }

            try (ResultSet rs = pstmt.getGeneratedKeys()) {
                if (rs.next()) {
                    int id = rs.getInt(1);
                    education.setId(id);
                    return education;
                } else {
                    throw new SQLException("Insertion failed, no ID obtained.");
                }
            }
        } catch (SQLException e) {
            System.out.println("Error while inserting education into the database: " + e.getMessage());
            return null;
        }
    }


    
  
        public static void main(String[] args) {
            EducationRepository repo = new EducationRepository();

            // Create an instance of Education
            Education education = new Education();
            education.setDegree("Bachelor of Science");
            education.setInstitution("University of Somewhere");
//            education.setStartDate("22/3/4");
//            education.setEndDate("22/3/20024");
            education.setAdditionalDetail("Some additional detail");

            // Insert the education into the database
            int profilesId = 1; // replace with the actual profile ID
            Education insertedEducation = repo.insertEducation(education, profilesId);

            if (insertedEducation != null) {
                System.out.println("Education inserted successfully: " + insertedEducation);
            } else {
                System.out.println("Failed to insert education.");
            }
        }
    }

