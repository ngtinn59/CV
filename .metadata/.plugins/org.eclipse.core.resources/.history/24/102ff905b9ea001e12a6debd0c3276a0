package ctu.cit;

import javax.json.Json;
import javax.json.JsonObject;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;

@Path("/users")
public class UserRespone {

    private UserResponsitory repository = new UserResponsitory();
    @POST
    @Path("/register")
    @Consumes(MediaType.APPLICATION_JSON)
    public Response registerUser(User user) {
        if (repository.getUserByEmail(user.getEmail()) != null) {
            JsonObject jsonError = Json.createObjectBuilder()
                    .add("error", "Email already taken")
                    .build();
            return Response.status(Response.Status.BAD_REQUEST).entity(jsonError).build();
        }
        repository.insertUser(user);

        // Generate a token
        String token = Jwts.builder()
                .setSubject(user.getEmail())
                .signWith(SignatureAlgorithm.HS256, "your-secret-key")
                .compact();

        JsonObject jsonResponse = Json.createObjectBuilder()
                .add("message", "User registered successfully")
                .add("token", token)
                .build();

        return Response.ok().entity(jsonResponse).build();
    }
}