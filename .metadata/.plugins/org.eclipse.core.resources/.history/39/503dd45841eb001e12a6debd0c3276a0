package ctu.cit;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.PathParam;
import javax.ws.rs.core.Response;
import javax.json.Json;
import javax.json.JsonObject;
import javax.json.JsonObjectBuilder;
import javax.json.JsonValue;

// ƒê·∫£m b·∫£o r·∫±ng l·ªõp n√†y ƒë∆∞·ª£c ƒë∆∞·ªùng d·∫´n /profiles
@Path("/profiles")
public class ProfileRespone {

  private UserResponsitory repository = new UserResponsitory();

  // ƒê·ªãnh nghƒ©a ph∆∞∆°ng th·ª©c GET cho /profiles/{userId}
  @GET
  @Path("/{userId}")
  public Response showProfile(int userId) {
	  Profile profile = repository.getProfileByUserId(userId);

	  if (profile == null) {
	    JsonObject jsonError = Json.createObjectBuilder()
	        .add("error", "Oops! Profile not found. Maybe it's hiding in a parallel universe?")
	        .build();
	    return Response.status(Response.Status.NOT_FOUND).entity(jsonError).build();
	  }

	  JsonObjectBuilder jsonResponseBuilder = Json.createObjectBuilder();

	  // Add fields to the JSON response, checking for null values
	  if (profile.getName() != null) {
	    jsonResponseBuilder.add("üë§ Name", profile.getName());
	  }
	  if (profile.getTitle() != null) {
	    jsonResponseBuilder.add("üìù Title", profile.getTitle());
	  }
	  // ... Repeat for other fields ...

	  // You can also choose to provide a default value for null fields
	  jsonResponseBuilder.add("üìß Email", profile.getEmail() != null ? profile.getEmail() : "No email provided");

	  JsonObject jsonResponse = jsonResponseBuilder.build();

	  return Response.ok(jsonResponse).build();
	}
}